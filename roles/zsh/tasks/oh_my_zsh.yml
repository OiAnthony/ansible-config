---
- name: Check if Oh My Zsh main script exists
  ansible.builtin.stat:
    path: "{{ oh_my_zsh_path }}/oh-my-zsh.sh" # Check for the key script file
  register: oh_my_zsh_script_file_check # Updated register name
  become: false # Check runs as user

- name: Check if Oh My Zsh directory exists
  ansible.builtin.stat:
    path: "{{ oh_my_zsh_path }}"
  register: oh_my_zsh_dir_check
  become: false

- name: Install Oh My Zsh
  ansible.builtin.shell:
    cmd: >
      sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    creates: "{{ oh_my_zsh_path }}/oh-my-zsh.sh"
  environment:
    ZSH: "{{ oh_my_zsh_path }}"
    RUNZSH: "no"
    CHSH: "no"
  become: false
  when: not oh_my_zsh_script_file_check.stat.exists and not oh_my_zsh_dir_check.stat.exists

- name: Clone zsh-autosuggestions plugin
  ansible.builtin.git:
    repo: "{{ zsh_autosuggestions_repo }}"
    dest: "{{ oh_my_zsh_custom_plugins_path }}/zsh-autosuggestions"
    version: master # Or a specific tag/commit
  become: false

- name: Clone zsh-syntax-highlighting plugin
  ansible.builtin.git:
    repo: "{{ zsh_syntax_highlighting_repo }}"
    dest: "{{ oh_my_zsh_custom_plugins_path }}/zsh-syntax-highlighting"
    version: master
  become: false

- name: Configure .zshrc with plugins
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ user_home }}/.zshrc"
    owner: "{{ target_user }}"
    group: "{{ target_user if ansible_os_family == 'Darwin' else target_user }}" # Group might be different on Linux
    mode: '0644'
  become: false # .zshrc is user-specific
